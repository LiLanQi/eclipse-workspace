package com.lilanqi.servlet;

import java.io.IOException;
import java.math.BigDecimal;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.List;

import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.lilanqi.order.OrderItem;
import com.lilanqi.service.OrderService;
import com.mysql.jdbc.ReplicationMySQLConnection;
@WebServlet("/showGoods.do")
public class ShowGoodsServlet extends BaseServlet{

	private OrderService os  = new OrderService();
	
	public void add(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		BigDecimal sum = BigDecimal.valueOf(0);
	
		String barCode  = request.getParameter("barCode");
		String goodsCount = request.getParameter("goodsCount");
		Integer rs  = 0;
		if (barCode != null && !"".equals(barCode)) {
			rs = Integer.parseInt(goodsCount);
		} else rs = 1;
		List<OrderItem> li = null;
		Object o = request.getSession().getAttribute("orderItemList");
		Object ob = request.getSession().getAttribute("sum");
		if (o != null) {
			li = (List<OrderItem>) o;
		} else {
			li = new LinkedList<OrderItem>();
		}
		boolean isNotExist = true;
		for (OrderItem orderItem : li) {
			if (orderItem.getBarCode().equals(barCode)) {
				isNotExist = false;
				orderItem.setGoodsCount(rs + orderItem.getGoodsCount());
				sum.add(orderItem.getPrice().multiply(BigDecimal.valueOf(rs)));
				break;
			} 
		}
		if (isNotExist) {
			try {
				OrderItem oi = os.getOrderItemByBarcode(barCode);
				sum.add(oi.getPrice().multiply(BigDecimal.valueOf(rs)));
				oi.setGoodsCount(rs);
				li.add(oi);
			} catch (Exception e) {
				e.printStackTrace();
			}
		}
		request.getSession().setAttribute("orderItemList", li);
		request.getSession().setAttribute("sum", sum);
		request.getRequestDispatcher("jsp/showGoods.jsp").forward(request, response);
	}
	
	public void delete(HttpServletRequest request, HttpServletResponse response) throws Exception {
		int k = 0;
		String barCode = request.getParameter("barCode");
		os.deleteOrderItemByBarcode(barCode);
		List<OrderItem> li =  (List<OrderItem>) request.getSession().getAttribute("orderItemList");
		for (OrderItem orderItem : li) {
			if (orderItem.getBarCode().equals(barCode)) {
				li.remove(k);
				break;
			} 
			k++;
		}
		request.getRequestDispatcher("jsp/showGoods.jsp").forward(request, response);
	}
}
